{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/AddCharacterActions.js","app/actions/CharacterActions.js","app/actions/CharacterListActions.js","app/actions/FooterActions.js","app/actions/HomeActions.js","app/actions/NavbarActions.js","app/actions/StatsActions.js","app/alt.js","app/components/AddCharacter.js","app/components/App.js","app/components/Character.js","app/components/CharacterList.js","app/components/Footer.js","app/components/Home.js","app/components/Navbar.js","app/components/Stats.js","app/main.js","app/routes.js","app/stores/AddCharacterStore.js","app/stores/CharacterListStore.js","app/stores/CharacterStore.js","app/stores/FooterStore.js","app/stores/HomeStore.js","app/stores/NavbarStore.js","app/stores/StatsStore.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Alt from '../alt';\r\n\r\nclass AddCharacterActions {\r\n    constructor() {\r\n        this.generateActions (\r\n            'addCharacterSuccess',\r\n            'addCharacterFail',\r\n            'updateName',\r\n            'updateGender',\r\n            'invalidName',\r\n            'invalidGender'\r\n        );\r\n    }\r\n\r\n    addCharacter(name, gender) {\r\n        $.ajax({\r\n            type: 'post',\r\n            url: '/api/characters',\r\n            data: {name: name, gender: gender}\r\n        })\r\n        .done((data) => {\r\n            this.actions.addCharacterSuccess(data.message);\r\n        })\r\n        .fail((jqXhr) => {\r\n            this.actions.addCharacterFail(jqXhr);\r\n        })\r\n    }\r\n}\r\n\r\nexport default Alt.createActions(AddCharacterActions);\r\n","import Alt from '../alt';\r\n\r\nclass CharacterActions {\r\n    constructor() {\r\n        this.generateActions (\r\n            'reportSuccess',\r\n            'reportFail',\r\n            'getCharacterSuccess',\r\n            'getCharacterFail'\r\n        )\r\n    }\r\n    getCharacter(characterId) {\r\n        $.ajax({\r\n            url: '/api/characters/' + characterId\r\n        })\r\n        .done((data) => {\r\n            this.actions.getCharacterSuccess(data);\r\n        })\r\n        .fail((jqXhr)=>{\r\n            this.actions.getCharacterFail(jqXhr);\r\n        });\r\n    }\r\n    report(characterId) {\r\n        $.ajax({\r\n            type: 'post',\r\n            url: '/api/report/',\r\n            data: { characterId : characterId }\r\n        })\r\n        .done(()=> {\r\n            this.actions.reportSuccess();\r\n        })\r\n        .fail((jqXhr)=> {\r\n            this.actions.reportFail(jqXhr);\r\n        })\r\n    }\r\n}\r\n\r\nexport default Alt.createActions(CharacterActions);","import Alt from '../alt';\r\n\r\nclass CharacterListActions {\r\n    constructor() {\r\n        this.generateActions(\r\n            'getCharacterSuccess',\r\n            'getCharacterFail'\r\n        );\r\n    }\r\n    getCharacters(payload){\r\n        let url= '/api/characters/top';\r\n        let params = {\r\n            race: payload.race,\r\n            bloodline: payload.bloodline\r\n        };\r\n        if (payload.category== 'female'){\r\n            params.gender = 'female';\r\n        } else if (payload.category == 'male') {\r\n            params.gender = 'male';\r\n        }\r\n        if (payload.category == 'shame')\r\n            url = '/api/shame';\r\n\r\n        $.ajax({\r\n            url: url,\r\n            data: params\r\n        }).done((data)=> {\r\n            this.actions.getCharacterSuccess(data);\r\n        }).fail((jqXhr)=>{\r\n            this.actions.getCharacterFail(jqXhr);\r\n        })\r\n    }\r\n}\r\n\r\nexport default Alt.createActions(CharacterListActions);","import alt from '../alt';\r\n\r\nclass FooterActions {\r\n  constructor() {\r\n    this.generateActions(\r\n      'getTopCharactersSuccess',\r\n      'getTopCharactersFail'\r\n    );\r\n  }\r\n\r\n  getTopCharacters() {\r\n    $.ajax({ url: '/api/characters/top' })\r\n      .done((data) => {\r\n        this.actions.getTopCharactersSuccess(data)\r\n      })\r\n      .fail((jqXhr) => {\r\n        this.actions.getTopCharactersFail(jqXhr)\r\n      });\r\n  }\r\n}\r\n\r\nexport default alt.createActions(FooterActions);","import Alt from '../alt';\r\n\r\nclass HomeActions {\r\n    constructor() {\r\n        this.generateActions(\r\n            'getTwoCharactersSuccess',\r\n            'getTwoCharactersFail',\r\n            'voteFail'\r\n        );\r\n    }\r\n    getTwoCharacters() {\r\n        $.ajax({\r\n            url: '/api/characters'\r\n        })\r\n        .done((data)=> {\r\n            this.actions.getTwoCharactersSuccess(data);\r\n        })\r\n        .fail((jqXhr)=> {\r\n            this.actions.getTwoCharactersFail(jqXhr);\r\n        })\r\n    }\r\n    vote(winner, loser) {\r\n        $.ajax({\r\n            type: 'PUT',\r\n            url: '/api/characters',\r\n            data: {winner: winner,loser: loser}\r\n        })\r\n        .done(()=> {\r\n            this.actions.getTwoCharacters();\r\n        })\r\n        .fail((jqXhr) => {\r\n            this.actions.voteFail(jqXhr);\r\n        })\r\n    }\r\n}\r\n\r\nexport default Alt.createActions(HomeActions);","import alt from '../alt';\r\nimport {assign} from 'underscore';\r\n\r\nclass NavbarActions {\r\n    constructor() {\r\n        this.generateActions(\r\n            'updateOnlineUsers',\r\n            'updateAjaxAnimation',\r\n            'getCharacterCountSuccess',\r\n            'getCharacterCountFail',\r\n            'findCharacterSucess',\r\n            'findCharacterFail'\r\n        );\r\n    }\r\n\r\n    findCharacter(payload) {\r\n        $.ajax({\r\n            url: '/api/characters/search',\r\n            data: {name: payload.searchQuery}\r\n        })\r\n        .done((done) => {\r\n            assign(payload, data);\r\n            this.actions.findCharacterSuccess(payload);\r\n        })\r\n        .fail(()=>{\r\n            this.actions.findCharacterFail(payload);\r\n        });\r\n    }\r\n    getCharacterCount() {\r\n        $.ajax({ url: '/api/characters/count' })\r\n        .done((data) => {\r\n            this.actions.getCharacterCountSuccess(data)\r\n        })\r\n        .fail((jqXhr) => {\r\n            this.actions.getCharacterCountFail(jqXhr)\r\n        });\r\n    }\r\n}\r\n\r\nexport default alt.createActions(NavbarActions);","import alt from '../alt';\r\n\r\nclass StatsActions {\r\n    constructor() {\r\n        this.generateActions (\r\n            'getStatsSuccess',\r\n            'getStatsFail'\r\n        );\r\n    }\r\n    getStats () {\r\n        $.ajax({\r\n            url: '/api/stats'\r\n        })\r\n        .done((data) => {\r\n            this.actions.getStatsSuccess(data);\r\n        })\r\n        .fail((jqXhr)=>{\r\n            this.actions.getStatsFail(jqXhr);\r\n        })\r\n    }\r\n}\r\n\r\nexport default alt.createActions(StatsActions);","import Alt from 'alt';\r\n\r\nexport default new Alt();","import React from 'react';\r\nimport AddCharacterStore from '../stores/AddCharacterStore';\r\nimport AddCharacterActions from '../actions/AddCharacterActions';\r\n\r\nexport default class AddCharacter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = AddCharacterStore.getState();\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        AddCharacterStore.listen(this.onChange);\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        AddCharacterStore.unlisten(this.onChange);\r\n    }\r\n\r\n    onChange(state) {\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        var name = this.state.name.trim();\r\n        var gender = this.state.gender;\r\n\r\n        if (!name){\r\n            AddCharacterActions.invalidName();\r\n            this.refs.nameTextField.getDOMNode().focus();\r\n        }\r\n        if (!gender){\r\n            AddCharacterActions.invalidGender();\r\n        }\r\n        if (name && gender){\r\n            AddCharacterActions.addCharacter(name, gender);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row flipInX animated'>\r\n                <div className='col-sm-8'>\r\n                    <div className='panel panel-default'>\r\n                    <div className='panel-heading'>Add Character</div>\r\n                    <div className='panel-body'>\r\n                        <form onSubmit={this.handleSubmit.bind(this)}>\r\n                        <div className={'form-group ' + this.state.nameValidationState}>\r\n                            <label className='control-label'>Character Name</label>\r\n                            <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\r\n                                onChange={AddCharacterActions.updateName} autoFocus/>\r\n                            <span className='help-block'>{this.state.helpBlock}</span>\r\n                        </div>\r\n                        <div className={'form-group ' + this.state.genderValidationState}>\r\n                            <div className='radio radio-inline'>\r\n                            <input type='radio' name='gender' id='female' value='Female' checked={this.state.gender === 'Female'}\r\n                                    onChange={AddCharacterActions.updateGender}/>\r\n                            <label htmlFor='female'>Female</label>\r\n                            </div>\r\n                            <div className='radio radio-inline'>\r\n                            <input type='radio' name='gender' id='male' value='Male' checked={this.state.gender === 'Male'}\r\n                                    onChange={AddCharacterActions.updateGender}/>\r\n                            <label htmlFor='male'>Male</label>\r\n                            </div>\r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary'>Submit</button>\r\n                        </form>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Footer from './Footer';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar history={this.props.history} />\r\n        {this.props.children}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport CharacterStore from '../stores/CharacterStore';\r\nimport CharacterActions from '../actions/CharacterActions';\r\n\r\nexport default class Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = CharacterStore.getState();\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        CharacterStore.listen(this.onChange);\r\n        CharacterActions.getCharacter(this.props.params.id);\r\n\r\n        $('.magnific-popup').magnificPopup({\r\n            type: 'image',\r\n            mainClass: 'mfp-zoom-in',\r\n            closeOnContentClick: true,\r\n            midClick: true,\r\n            zoom: {\r\n                enabled: true,\r\n                duration: 300\r\n            }\r\n        });\r\n    }\r\n    componentWillUnmount(){\r\n        CharacterStore.unlisten(this.onChange);\r\n        $(document.body).removeClass();\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.params.id != this.props.params.id)\r\n            CharacterActions.getCharacter(this.props.params.id);\r\n    }\r\n    onChange(state){\r\n        this.setState(state);\r\n    }\r\n    render(){\r\n        return (\r\n        <div className='container'>\r\n            <div className='profile-img'>\r\n            <a className='magnific-popup' href={'https://image.eveonline.com/Character/' + this.state.characterId + '_1024.jpg'}>\r\n                <img src={'https://image.eveonline.com/Character/' + this.state.characterId + '_256.jpg'} />\r\n            </a>\r\n            </div>\r\n            <div className='profile-info clearfix'>\r\n            <h2><strong>{this.state.name}</strong></h2>\r\n            <h4 className='lead'>Race: <strong>{this.state.race}</strong></h4>\r\n            <h4 className='lead'>Bloodline: <strong>{this.state.bloodline}</strong></h4>\r\n            <h4 className='lead'>Gender: <strong>{this.state.gender}</strong></h4>\r\n            <button className='btn btn-transparent'\r\n                    onClick={CharacterActions.report.bind(this, this.state.characterId)}\r\n                    disabled={this.state.isReported}>\r\n                {this.state.isReported ? 'Reported' : 'Report Character'}\r\n            </button>\r\n            </div>\r\n            <div className='profile-stats clearfix'>\r\n            <ul>\r\n                <li><span className='stats-number'>{this.state.winLossRatio}</span>Winning Percentage</li>\r\n                <li><span className='stats-number'>{this.state.wins}</span> Wins</li>\r\n                <li><span className='stats-number'>{this.state.losses}</span> Losses</li>\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport {isEqual} from 'underscore';\r\nimport CharacterListStore from '../stores/CharacterListStore';\r\nimport CharacterListActions from '../actions/CharacterListActions';\r\n\r\nexport default class CharacterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = CharacterListStore.getState();\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        CharacterListStore.listen(this.onChange);\r\n        CharacterListActions.getCharacters(this.props.params);\r\n    }\r\n    componentWillUnmount() {\r\n        CharacterListStore.unlisten(this.onChange);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (!isEqual(prevProps.params,this.props.params))\r\n            CharacterListActions.getCharacters(this.props.params);\r\n    }\r\n    onChange(state){\r\n        this.setState(state);\r\n    }\r\n    render() {\r\n        let characterList = this.state.characters.map((character, index)=> {\r\n            return (\r\n                <div key={character.characterId} className='list-group-item animated fadeIn'>\r\n                <div className='media'>\r\n                    <span className='position pull-left'>{index + 1}</span>\r\n                    <div className='pull-left thumb-lg'>\r\n                    <Link to={'/characters/' + character.characterId}>\r\n                        <img className='media-object' src={'http://image.eveonline.com/Character/' + character.characterId + '_128.jpg'} />\r\n                    </Link>\r\n                    </div>\r\n                    <div className='media-body'>\r\n                    <h4 className='media-heading'>\r\n                        <Link to={'/characters/' + character.characterId}>{character.name}</Link>\r\n                    </h4>\r\n                    <small>Race: <strong>{character.race}</strong></small>\r\n                    <br />\r\n                    <small>Bloodline: <strong>{character.bloodline}</strong></small>\r\n                    <br />\r\n                    <small>Wins: <strong>{character.wins}</strong> Losses: <strong>{character.losses}</strong></small>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n            });\r\n\r\n            return (\r\n            <div className='container'>\r\n                <div className='list-group'>\r\n                {characterList}\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport FooterStore from '../stores/FooterStore';\r\nimport FooterActions from '../actions/FooterActions';\r\n\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = FooterStore.getState();\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FooterStore.listen(this.onChange);\r\n        FooterActions.getTopCharacters();\r\n    }\r\n\r\n    componentWillMount() {\r\n        FooterStore.unlisten(this.onChange);\r\n    }\r\n\r\n    onChange(state) {\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        let leaderboardCharacters = this.state.characters.map((character) => {\r\n            return (\r\n                <li key={character.characterId} >\r\n                    <Link to={'/characters/'+character.characterId}>\r\n                        <img className='thumb-md' src={'http://image.eveonline.com/Character/' + character.characterId + '_128.jpg'} />\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <footer>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-sm-5'>\r\n                            <h3 className='lead'><strong>Information</strong> and <strong>Copyright</strong></h3>\r\n                            <p>Powered by <strong>Node.js</strong>, <strong>MongoDB</strong> and <strong>React</strong> with Flux architecture and server-side rendering.</p>\r\n                            <p>You may view the <a href='https://github.com/sahat/newedenfaces-react'>Source Code</a> behind this project on GitHub.</p>\r\n                            <p>© 2015 Sahat Yalkabov.</p>\r\n                        </div>\r\n                        <div className='col-sm-7 hidden-xs'>\r\n                            <h3 className='lead'><strong>Leaderboard</strong> Top 5 Characters</h3>\r\n                            <ul className='list-inline'>\r\n                                {leaderboardCharacters}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport HomeStore from '../stores/HomeStore';\r\nimport HomeActions from '../actions/HomeActions';\r\nimport {first, without, findWhere} from 'underscore';\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = HomeStore.getState();\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  componentDidMount () {\r\n    HomeStore.listen(this.onChange);\r\n    HomeActions.getTwoCharacters();\r\n  }\r\n  componentWillUnmount () {\r\n    HomeStore.unlisten(this.onChange);\r\n  }\r\n  onChange(state) {\r\n    this.setState(state);\r\n  }\r\n  handleClick(char) {\r\n    var winner = char.characterId;\r\n    var loser = first(without(this.state.characters, findWhere(this.state.characters, {characterId: winner}))).characterId;\r\n    HomeActions.vote(winner, loser);\r\n  }\r\n  render() {\r\n    var characterNodes = this.state.characters.map((character, index) => {\r\n      return (\r\n        <div key={character.characterId} className={index === 0 ? 'col-xs-6 col-sm-6 col-md-5 col-md-offset-1' : 'col-xs-6 col-sm-6 col-md-5'}>\r\n          <div className='thumbnail fadeInUp animated'>\r\n            <img onClick={this.handleClick.bind(this, character)} src={'http://image.eveonline.com/Character/' + character.characterId + '_512.jpg'}/>\r\n            <div className='caption text-center'>\r\n              <ul className='list-inline'>\r\n                <li><strong>Race:</strong> {character.race}</li>\r\n                <li><strong>Bloodline:</strong> {character.bloodline}</li>\r\n              </ul>\r\n              <h4>\r\n                <Link to={'/characters/' + character.characterId}><strong>{character.name}</strong></Link>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className='container'>\r\n        <h3 className='text-center'>Click on the portrait. Select your favorite.</h3>\r\n        <div className='row'>\r\n          {characterNodes}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport NavbarStore from '../stores/NavbarStore';\r\nimport NavbarActions from '../actions/NavbarActions';\r\n\r\nexport default class Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = NavbarStore.getState();\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        NavbarStore.listen(this.onChange);\r\n        NavbarActions.getCharacterCount();\r\n\r\n        let socket = io.connect();\r\n\r\n        socket.on('onlineUsers', (data) => {\r\n            NavbarActions.updateOnlineUsers(data);\r\n        });\r\n\r\n        $(document).ajaxStart(()=>{\r\n            setTimeout(() => {\r\n                NavbarActions.updateAjaxAnimation('fadeIn');\r\n            }, 750);\r\n        });\r\n\r\n        $(document).ajaxComplete(()=> {\r\n            setTimeout(()=>{\r\n                NavbarActions.updateAjaxAnimation('fadeOut');\r\n            }, 750);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        NavbarStore.unlisten(this.onChange);\r\n    }\r\n\r\n    onChange(state) {\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let searchQuery = this.state.searchQuery.trim();\r\n\r\n        if (searchQuery) {\r\n            NavbarActions.findCharacter({\r\n                searchQuery: searchQuery,\r\n                searchForm: this.refs.searchForm,\r\n                history: this.props.history\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className='navbar navbar-default navbar-static-top'>\r\n                <div className='navbar-header'>\r\n                <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\r\n                    <span className='sr-only'>Toggle navigation</span>\r\n                    <span className='icon-bar'></span>\r\n                    <span className='icon-bar'></span>\r\n                    <span className='icon-bar'></span>\r\n                </button>\r\n                <Link to='/' className='navbar-brand'>\r\n                    <span ref='triangles' className={'triangles animated ' + this.state.ajaxAnimationClass}>\r\n                    <div className='tri invert'></div>\r\n                    <div className='tri invert'></div>\r\n                    <div className='tri'></div>\r\n                    <div className='tri invert'></div>\r\n                    <div className='tri invert'></div>\r\n                    <div className='tri'></div>\r\n                    <div className='tri invert'></div>\r\n                    <div className='tri'></div>\r\n                    <div className='tri invert'></div>\r\n                    </span>\r\n                    NEF\r\n                    <span className='badge badge-up badge-danger'>{this.state.onlineUsers}</span>\r\n                </Link>\r\n                </div>\r\n                <div id='navbar' className='navbar-collapse collapse'>\r\n                <form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className='input-group'>\r\n                    <input type='text' className='form-control' placeholder={this.state.totalCharacters + ' characters'} value={this.state.searchQuery} onChange={NavbarActions.updateSearchQuery} />\r\n                    <span className='input-group-btn'>\r\n                        <button className='btn btn-default' onClick={this.handleSubmit.bind(this)}><span className='glyphicon glyphicon-search'></span></button>\r\n                    </span>\r\n                    </div>\r\n                </form>\r\n                <ul className='nav navbar-nav'>\r\n                    <li><Link to='/'>Home</Link></li>\r\n                    <li><Link to='/stats'>Stats</Link></li>\r\n                    <li className='dropdown'>\r\n                    <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Top 100 <span className='caret'></span></a>\r\n                    <ul className='dropdown-menu'>\r\n                        <li><Link to='/top'>Top Overall</Link></li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/top/caldari'>Caldari</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/top/caldari/achura'>Achura</Link></li>\r\n                            <li><Link to='/top/caldari/civire'>Civire</Link></li>\r\n                            <li><Link to='/top/caldari/deteis'>Deteis</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/top/gallente'>Gallente</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/top/gallente/gallente'>Gallente</Link></li>\r\n                            <li><Link to='/top/gallente/intaki'>Intaki</Link></li>\r\n                            <li><Link to='/top/gallente/jin-mei'>Jin-Mei</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/top/minmatar'>Minmatar</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/top/minmatar/brutor'>Brutor</Link></li>\r\n                            <li><Link to='/top/minmatar/sebiestor'>Sebiestor</Link></li>\r\n                            <li><Link to='/top/minmatar/vherokior'>Vherokior</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/top/amarr'>Amarr</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/top/amarr/amarr'>Amarr</Link></li>\r\n                            <li><Link to='/top/amarr/ni-kunni'>Ni-Kunni</Link></li>\r\n                            <li><Link to='/top/amarr/khanid'>Khanid</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='divider'></li>\r\n                        <li><Link to='/shame'>Hall of Shame</Link></li>\r\n                    </ul>\r\n                    </li>\r\n                    <li className='dropdown'>\r\n                    <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Female <span className='caret'></span></a>\r\n                    <ul className='dropdown-menu'>\r\n                        <li><Link to='/female'>All</Link></li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/female/caldari'>Caldari</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/female/caldari/achura'>Achura</Link></li>\r\n                            <li><Link to='/female/caldari/civire/'>Civire</Link></li>\r\n                            <li><Link to='/female/caldari/deteis'>Deteis</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/female/gallente'>Gallente</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/female/gallente/gallente'>Gallente</Link></li>\r\n                            <li><Link to='/female/gallente/intaki'>Intaki</Link></li>\r\n                            <li><Link to='/female/gallente/jin-mei'>Jin-Mei</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/female/minmatar'>Minmatar</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/female/minmatar/brutor'>Brutor</Link></li>\r\n                            <li><Link to='/female/minmatar/sebiestor'>Sebiestor</Link></li>\r\n                            <li><Link to='/female/minmatar/vherokior'>Vherokior</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/female/amarr'>Amarr</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/female/amarr/amarr'>Amarr</Link></li>\r\n                            <li><Link to='/female/amarr/ni-kunni'>Ni-Kunni</Link></li>\r\n                            <li><Link to='/female/amarr/khanid'>Khanid</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                    </ul>\r\n                    </li>\r\n                    <li className='dropdown'>\r\n                    <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Male <span className='caret'></span></a>\r\n                    <ul className='dropdown-menu'>\r\n                        <li><Link to='/male'>All</Link></li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/male/caldari'>Caldari</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/male/caldari/achura'>Achura</Link></li>\r\n                            <li><Link to='/male/caldari/civire'>Civire</Link></li>\r\n                            <li><Link to='/male/caldari/deteis'>Deteis</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/male/gallente'>Gallente</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/male/gallente/gallente'>Gallente</Link></li>\r\n                            <li><Link to='/male/gallente/intaki'>Intaki</Link></li>\r\n                            <li><Link to='/male/gallente/jin-mei'>Jin-Mei</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/male/minmatar'>Minmatar</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/male/minmatar/brutor'>Brutor</Link></li>\r\n                            <li><Link to='/male/minmatar/sebiestor'>Sebiestor</Link></li>\r\n                            <li><Link to='/male/minmatar/vherokior'>Vherokior</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className='dropdown-submenu'>\r\n                        <Link to='/male/amarr'>Amarr</Link>\r\n                        <ul className='dropdown-menu'>\r\n                            <li><Link to='/male/amarr/amarr'>Amarr</Link></li>\r\n                            <li><Link to='/male/amarr/ni-kunni'>Ni-Kunni</Link></li>\r\n                            <li><Link to='/male/amarr/khanid'>Khanid</Link></li>\r\n                        </ul>\r\n                        </li>\r\n                    </ul>\r\n                    </li>\r\n                    <li><Link to='/add'>Add</Link></li>\r\n                </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport StatsStore from '../stores/StatsStore';\r\nimport StatsActions from '../actions/StatsActions';\r\n\r\nexport default class Stats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = StatsStore.getState();\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    componentDidMount () {\r\n        StatsStore.listen(this.onChange);\r\n        StatsActions.getStats();\r\n    }\r\n    componentWillUnmount () {\r\n        StatsStore.unlisten(this.onChange);\r\n    }\r\n    onChange(state) {\r\n        this.setState(state);\r\n    }\r\n    render () {\r\n        return (\r\n            <div className='container'>\r\n                <div className='panel panel-default'>\r\n                <table className='table table-striped'>\r\n                    <thead>\r\n                    <tr>\r\n                    <th colSpan='2'>Stats</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                    <td>Leading race in Top 100</td>\r\n                    <td>{this.state.leadingRace.race} with {this.state.leadingRace.count} characters</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Leading bloodline in Top 100</td>\r\n                    <td>{this.state.leadingBloodline.bloodline} with {this.state.leadingBloodline.count} characters\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Amarr Characters</td>\r\n                    <td>{this.state.amarrCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Caldari Characters</td>\r\n                    <td>{this.state.caldariCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Gallente Characters</td>\r\n                    <td>{this.state.gallenteCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Minmatar Characters</td>\r\n                    <td>{this.state.minmatarCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Total votes cast</td>\r\n                    <td>{this.state.totalVotes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Female characters</td>\r\n                    <td>{this.state.femaleCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Male characters</td>\r\n                    <td>{this.state.maleCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Total number of characters</td>\r\n                    <td>{this.state.totalCount}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Router from 'react-router';\r\nimport ReactDOM from 'react-dom';\r\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\r\nimport routes from './routes';\r\n\r\nlet history = createBrowserHistory();\r\n\r\nReactDOM.render(<Router history={history}>{routes}</Router>, document.getElementById('app'));","import React from 'react';\r\nimport {Route} from 'react-router';\r\nimport App from './components/App';\r\nimport Home from './components/Home';\r\nimport AddCharacter from './components/AddCharacter';\r\nimport Character from './components/Character';\r\nimport CharacterList from './components/CharacterList';\r\nimport Stats from './components/Stats';\r\n\r\nexport default (\r\n  <Route component={App}>\r\n    <Route path='/' component={Home} />\r\n    <Route path='/add' component={AddCharacter} />\r\n    <Route path='/characters/:id' component={Character} />\r\n    <Route path='/stats' component={Stats} />\r\n    <Route path=':category' component={CharacterList}>\r\n      <Route path=':race' component={CharacterList}>\r\n        <Route path=':bloodline' component={CharacterList} />\r\n      </Route>\r\n    </Route>\r\n  </Route>\r\n);","import Alt from '../alt';\r\nimport AddCharacterActions from '../actions/AddCharacterActions';\r\n\r\nclass AddCharacterStore {\r\n    constructor() {\r\n        this.bindActions(AddCharacterActions);\r\n        this.name  = '';\r\n        this.gender = '';\r\n        this.helpBlock = '';\r\n        this.nameValidationState = '';\r\n        this.genderValidationState = '';\r\n    }\r\n    onAddCharacterSuccess(successMessage) {\r\n        this.nameValidationState = 'has-success';\r\n        this.helpBlock = successMessage;\r\n    }\r\n\r\n    onAddCharacterFail(jqXhr) {\r\n        this.nameValidationState= 'has-error'\r\n        this.helpBlock = jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText\r\n    }\r\n\r\n    onUpdateName(e) {\r\n        this.name = e.target.value;\r\n        this.nameValidationState='';\r\n        this.helpBlock='';\r\n    }\r\n\r\n    onUpdateGender(e) {\r\n        this.gender = e.target.value;\r\n        this.genderValidationState= '';\r\n    }\r\n\r\n    onInvalidName() {\r\n        this.nameValidationState='has-error';\r\n        this.helpBlock='Please enter a character name.';\r\n    }\r\n\r\n    onInvalidGender() {\r\n        this.genderValidationState='has-error';\r\n    }\r\n\r\n}\r\n\r\nexport default Alt.createStore(AddCharacterStore);","import Alt from '../alt';\r\nimport CharacterListActions from '../actions/CharacterListActions';\r\n\r\nclass CharacterListStore {\r\n    constructor() {\r\n        this.bindActions(CharacterListActions);\r\n        this.characters = [];\r\n    }\r\n    onGetCharacterSuccess(data) {\r\n        this.characters = data;\r\n    }\r\n    onGetCharacterFail(jqXhr) {\r\n        toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n    }\r\n}\r\n\r\nexport default Alt.createStore(CharacterListStore);","import Alt from '../alt';\r\nimport {assign, contains} from 'underscore';\r\nimport CharacterActions from '../actions/CharacterActions';\r\n\r\nclass CharacterStore {\r\n    constructor() {\r\n        this.bindActions(CharacterActions);\r\n        this.characterId = 0;\r\n        this.name = 'TBD';\r\n        this.race = 'TBD';\r\n        this.bloodline = 'TBD';\r\n        this.gender = 'TBD';\r\n        this.wins = 0;\r\n        this.losses = 0;\r\n        this.winLossRatio = 0;\r\n        this.isReported = false;\r\n    }\r\n\r\n    onGetCharacterSuccess(data) {\r\n        assign(this, data);\r\n        $(document.body).attr('class', 'profile '+ this.race.toLowerCase());\r\n        let localData = localStorage.getItem('NEF') ? JSON.parse(localStorage.getItem('NEF')) : {};\r\n        let reports= localData.reports || [];\r\n        this.isReported = contains(reports , this.characterId);\r\n        this.winLossRatio = ((this.wins/(this.wins+this.losses) * 100) || 0 ).toFixed(1);\r\n    }\r\n    onGetCharacterFail(jqXhr) {\r\n        toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n    }\r\n    onReportSuccess() {\r\n        this.isReported = true;\r\n        let localData = localStorage.getItem('NEF') ? JSON.parse(localStorage.getItem('NEF')) : {};\r\n        localData.reports = localData.reports | [];\r\n        localData.reports.push(this.characterId);\r\n        localStorage.setItem('NEF', JSON.stringify(localData));\r\n        toastr.warning('Character has been reported');\r\n    }\r\n    onReportFail(jqXhr) {\r\n        toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n    }\r\n}\r\n\r\nexport default Alt.createStore(CharacterStore);","import alt from '../alt';\r\nimport FooterActions from '../actions/FooterActions';\r\n\r\nclass FooterStore {\r\n  constructor() {\r\n    this.bindActions(FooterActions);\r\n    this.characters = [];\r\n  }\r\n\r\n  onGetTopCharactersSuccess(data) {\r\n    this.characters = data.slice(0, 5);\r\n  }\r\n\r\n  onGetTopCharactersFail(jqXhr) {\r\n    // Handle multiple response formats, fallback to HTTP status code number.\r\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n  }\r\n}\r\n\r\nexport default alt.createStore(FooterStore);","import alt from '../alt';\r\nimport HomeActions from '../actions/HomeActions';\r\n\r\nclass HomeStore {\r\n  constructor() {\r\n    this.bindActions(HomeActions);\r\n    this.characters = [];\r\n  }\r\n\r\n  onGetTwoCharactersSuccess(data) {\r\n    this.characters = data;\r\n  }\r\n\r\n  onGetTwoCharactersFail(jqXhr) {\r\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n  }\r\n\r\n  onVoteFail(jqXhr) {\r\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n  }\r\n}\r\n\r\nexport default alt.createStore(HomeStore);","import alt from '../alt';\r\nimport NavbarActions from '../actions/NavbarActions';\r\n\r\nclass NavbarStore {\r\n  constructor() {\r\n    this.bindActions(NavbarActions);\r\n    this.totalCharacters = 0;\r\n    this.onlineUsers = 0;\r\n    this.searchQuery = '';\r\n    this.ajaxAnimationClass = '';\r\n  }\r\n\r\n  onFindCharacterSuccess(payload) {\r\n    payload.history.pushState(null, '/characters/' + payload.characterId);\r\n  }\r\n\r\n  onFindCharacterFail(payload) {\r\n    payload.searchForm.classList.add('shake');\r\n    setTimeout(() => {\r\n      payload.searchForm.classList.remove('shake');\r\n    }, 1000);\r\n  }\r\n\r\n  onUpdateOnlineUsers(data) {\r\n    this.onlineUsers = data.onlineUsers;\r\n  }\r\n\r\n  onUpdateAjaxAnimation(className) {\r\n    this.ajaxAnimationClass = className; //fadein or fadeout\r\n  }\r\n\r\n  onUpdateSearchQuery(event) {\r\n    this.searchQuery = event.target.value;\r\n  }\r\n\r\n  onGetCharacterCountSuccess(data) {\r\n    this.totalCharacters = data.count;\r\n  }\r\n\r\n  onGetCharacterCountFail(jqXhr) {\r\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n  }\r\n}\r\n\r\nexport default alt.createStore(NavbarStore);","import alt from '../alt';\r\nimport {assign} from 'underscore';\r\nimport StatsActions from '../actions/StatsActions';\r\n\r\nclass StatsStore {\r\n    constructor() {\r\n        this.bindActions(StatsActions);\r\n        this.leadingRace = { race: 'Unknown', count: 0 };\r\n        this.leadingBloodline = { bloodline: 'Unknown', count: 0 };\r\n        this.amarrCount = 0;\r\n        this.caldariCount = 0;\r\n        this.gallenteCount = 0;\r\n        this.minmatarCount = 0;\r\n        this.totalVotes = 0;\r\n        this.femaleCount = 0;\r\n        this.maleCount = 0;\r\n        this.totalCount = 0;\r\n    }\r\n    onGetStatsSuccess(data) {\r\n        assign(this,data);\r\n    }\r\n    onGetStatsFail(jqXhr) {\r\n        toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n    }\r\n}\r\n\r\nexport default alt.createStore(StatsStore);\r\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}